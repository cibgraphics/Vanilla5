// Useful SCSS Mixins
// Please use Compass for advanced mixins


// REM Calculation with px fallback
// Requires $font-size variable to be set

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin rem-size($value, $property: font-size) {
  $pxValue: strip-unit($value);
  $baseValue: strip-unit($font-size);
  $remValue: ($pxValue / $baseValue);
  #{$property}: $value;
  #{$property}: $remValue + rem;
}


// Box Sizing
@mixin box-sizing($sizing: border-box) {
     -moz-box-sizing: $sizing;
  -webkit-box-sizing: $sizing;
          box-sizing: $sizing;
}


// Clear Fix Mixin
@mixin clearfix() {
  *zoom: 1;

  &:before,
  &:after {
    display: table;
    content: "";
  }
  &:after {
    clear: both;
  }
}

// Box Shadow
@mixin box-shadow ($x: 0px, $y: 3px, $blur: 5px, $alpha: 0.5) {
  -webkit-box-shadow: $x $y $blur rgba(0, 0, 0, $alpha);
          box-shadow: $x $y $blur rgba(0, 0, 0, $alpha);
}

// Box Shadow Color
@mixin box-shadow-color ($x: 0px, $y: 3px, $blur: 5px, $color: rgba(0,0,0,.5)) {
  -webkit-box-shadow: $x $y $blur $color;
          box-shadow: $x $y $blur $color;
}

// Inner Shadow
@mixin inner-shadow ($x: 0, $y: 1px, $blur: 2px, $alpha: 0.25) {
  -webkit-box-shadow: inset $x $y $blur rgba(0, 0, 0, $alpha);
          box-shadow: inset $x $y $blur rgba(0, 0, 0, $alpha);
}

// Animation
@mixin animation ($name, $duration: 300ms, $delay: 0, $ease: ease) {
  -webkit-animation: $name $duration $delay $ease;
     -moz-animation: $name $duration $delay $ease;
          animation: $name $duration $delay $ease;
}

// Transition
@mixin transition ($prop: all, $time: 0.2s, $ease: linear) {
  -webkit-transition: $prop $time $ease;
          transition: $prop $time $ease;
}

// No Transition
@mixin transition-none() {
  -webkit-transition: none;
          transition: none;
}

// Rotate
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
      -ms-transform: rotate($degrees); // IE9 only
          transform: rotate($degrees);
}

// Scale
@mixin scale($ratio: 1, $ratio-y: 1) {
  -webkit-transform: scale($ratio, $ratio-y);
      -ms-transform: scale($ratio, $ratio-y); // IE9 only
          transform: scale($ratio, $ratio-y);
}

// Translate
@mixin translate($x: 0, $y: 0) {
  -webkit-transform: translate($x, $y);
      -ms-transform: translate($x, $y); // IE9 only
          transform: translate($x, $y);
}

// Skew
@mixin skew($x: 0, $y: 0) {
  -webkit-transform: skew($x, $y);
      -ms-transform: skewX($x) skewY($y); // IE9 only
          transform: skew($x, $y);
}

// Linear Gradient
@mixin gradient ($origin: bottom, $start: #ffffff, $stop: #e2e2e2) {
  background: $start;
  background: -webkit-linear-gradient(to $origin, $start 0%, $stop 100%);
  background: linear-gradient(to $origin, $start 0%, $stop 100%);
}

@mixin gradient-trio ($origin: bottom, $start: #ffffff, $stop-color: #f2f2f2, $stop-position: 50%, $end: #e2e2e2) {
  background: $start;
  background: -webkit-linear-gradient(to $origin, $start 0%,$stop-color $stop-position, $end 100%);
  background: linear-gradient(to $origin, $start 0%, $stop-color $stop-position, $end 100%);
}

// Quick Gradient - needs background color
@mixin quick-gradient ($origin: top, $alpha: 0.2) {
  background-image: -webkit-linear-gradient($origin, rgba(0,0,0,0.0) 0%, rgba(0,0,0,$alpha) 100%);
  background-image: linear-gradient($origin, rgba(0,0,0,0.0) 0%, rgba(0,0,0,$alpha) 100%);
}

// Quick White Gradient - needs background color
@mixin quick-gradient-white ($origin: top, $alpha: 0.25) {
  background-image: -webkit-linear-gradient(to $origin, rgba(255,255,255,$alpha) 0%, rgba(255,255,255,.0) 100%);
  background-image: linear-gradient(to $origin, rgba(255,255,255,$alpha) 0%, rgba(255,255,255,.0) 100%);
}

// Webkit Reflection
@mixin reflect ($length: 50%, $opacity: 0.2){
  -webkit-box-reflect: below 0px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop($length, transparent), to(rgba(255,255,255,$opacity)));
}

// Table Zebra Stripe
@mixin zebra-stripe($stripe_color: #F0F0F0) {
  tbody tr:nth-child(2n+1) { background: $stripe_color; }
}

// List Zebra Stripe
@mixin zebra-list-stripe($stripe_color: #F0F0F0) {
  li:nth-child(2n+1) { background: $stripe_color; }
}